recursion

func calls itself to solve smaller versions of the  same problem

two parts of recursion
1. base case - stop condition (when to stop calling itself)
2. recursive case - part where func calls itself

real life examples

queue of people,comment threads, organizational hierarchies

-- always make sure base case is written on the top


common mistakes

missing base case
not simplifing the input - never reaches base case
too deep recursion - large inputs
keep in mind time complexity

time complexity of 1 to n is O(n)

when to use recursion
---------------------
problems can be broken down to sub problems
trees and graphs
backtracking,DP, divide and conquer

